<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Min&#39;s Blog</title>
  <icon>http://120.48.161.105:4000/icon.png</icon>
  <subtitle>well begun is half done</subtitle>
  <link href="http://120.48.161.105:4000/atom.xml" rel="self"/>
  
  <link href="http://120.48.161.105:4000/"/>
  <updated>2022-09-12T08:22:50.901Z</updated>
  <id>http://120.48.161.105:4000/</id>
  
  <author>
    <name>史明忠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React入门</title>
    <link href="http://120.48.161.105:4000/2022/09/12/React%E5%85%A5%E9%97%A8/"/>
    <id>http://120.48.161.105:4000/2022/09/12/React%E5%85%A5%E9%97%A8/</id>
    <published>2022-09-12T08:16:37.659Z</published>
    <updated>2022-09-12T08:22:50.901Z</updated>
    
    
    <summary type="html">React是一个用于构建用户界面的JavaScript库,用来为现代的网络构建用户界面。本文以react的特点和构建以及三个底层API来介绍React</summary>
    
    
    
    <category term="React" scheme="http://120.48.161.105:4000/categories/React/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://120.48.161.105:4000/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="API" scheme="http://120.48.161.105:4000/tags/API/"/>
    
    <category term="react" scheme="http://120.48.161.105:4000/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>JS一些原理和方法</title>
    <link href="http://120.48.161.105:4000/2022/09/12/JS%E4%B8%80%E4%BA%9B%E5%8E%9F%E7%90%86%E5%92%8C%E6%96%B9%E6%B3%95/"/>
    <id>http://120.48.161.105:4000/2022/09/12/JS%E4%B8%80%E4%BA%9B%E5%8E%9F%E7%90%86%E5%92%8C%E6%96%B9%E6%B3%95/</id>
    <published>2022-09-12T08:11:58.600Z</published>
    <updated>2022-09-12T08:21:15.931Z</updated>
    
    
    <summary type="html">JS深拷贝、sort排序、判断数据类型、比较运算、跳出循环、字符串方法、数组方法</summary>
    
    
    
    <category term="JS" scheme="http://120.48.161.105:4000/categories/JS/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://120.48.161.105:4000/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="http://120.48.161.105:4000/tags/JS/"/>
    
    <category term="方法" scheme="http://120.48.161.105:4000/tags/%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Vue模板语法</title>
    <link href="http://120.48.161.105:4000/2022/09/12/Vue%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/"/>
    <id>http://120.48.161.105:4000/2022/09/12/Vue%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/</id>
    <published>2022-09-12T08:08:16.977Z</published>
    <updated>2022-09-12T08:15:39.552Z</updated>
    
    
    <summary type="html">Vue插值语法，指令语法的使用与作用，以及指令间的关系</summary>
    
    
    
    <category term="Vue" scheme="http://120.48.161.105:4000/categories/Vue/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="指令" scheme="http://120.48.161.105:4000/categories/%E6%8C%87%E4%BB%A4/"/>
    
    
    <category term="Vue" scheme="http://120.48.161.105:4000/tags/Vue/"/>
    
    <category term="指令语法" scheme="http://120.48.161.105:4000/tags/%E6%8C%87%E4%BB%A4%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JS运行机制 Vue全局API nextTick源码分析</title>
    <link href="http://120.48.161.105:4000/2022/09/12/JS%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%20Vue%E5%85%A8%E5%B1%80API%20nextTick%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://120.48.161.105:4000/2022/09/12/JS%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%20Vue%E5%85%A8%E5%B1%80API%20nextTick%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2022-09-12T08:05:13.336Z</published>
    <updated>2022-09-12T08:15:39.507Z</updated>
    
    
    <summary type="html">JS运行机制 Vue全局API nextTick源码分析</summary>
    
    
    
    <category term="JS" scheme="http://120.48.161.105:4000/categories/JS/"/>
    
    <category term="Vue" scheme="http://120.48.161.105:4000/categories/Vue/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JS" scheme="http://120.48.161.105:4000/tags/JS/"/>
    
    <category term="Vue" scheme="http://120.48.161.105:4000/tags/Vue/"/>
    
    <category term="源码" scheme="http://120.48.161.105:4000/tags/%E6%BA%90%E7%A0%81/"/>
    
    <category term="API" scheme="http://120.48.161.105:4000/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>包含min函数的栈</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</id>
    <published>2022-09-12T08:03:03.091Z</published>
    <updated>2022-09-12T08:04:09.786Z</updated>
    
    
    <summary type="html">定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度都是 O(1)。</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/categories/%E5%8A%9B%E6%89%A3/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="简单" scheme="http://120.48.161.105:4000/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="offer" scheme="http://120.48.161.105:4000/tags/offer/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/tags/%E5%8A%9B%E6%89%A3/"/>
    
    <category term="栈" scheme="http://120.48.161.105:4000/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>用两个栈实现队列</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</id>
    <published>2022-09-12T08:01:31.441Z</published>
    <updated>2022-09-12T08:02:34.833Z</updated>
    
    
    <summary type="html">用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead操作返回 -1 )</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/categories/%E5%8A%9B%E6%89%A3/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="简单" scheme="http://120.48.161.105:4000/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="offer" scheme="http://120.48.161.105:4000/tags/offer/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/tags/%E5%8A%9B%E6%89%A3/"/>
    
    <category term="栈" scheme="http://120.48.161.105:4000/tags/%E6%A0%88/"/>
    
    <category term="队列" scheme="http://120.48.161.105:4000/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>二进制加法</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8A%A0%E6%B3%95/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8A%A0%E6%B3%95/</id>
    <published>2022-09-12T08:00:05.152Z</published>
    <updated>2022-09-12T08:01:05.205Z</updated>
    
    
    <summary type="html">给定两个 01 字符串 a 和 b ，请计算它们的和，并以二进制字符串的形式输出。 输入为 非空 字符串且只包含数字 1 和 0。</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/categories/%E5%8A%9B%E6%89%A3/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="简单" scheme="http://120.48.161.105:4000/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="offer" scheme="http://120.48.161.105:4000/tags/offer/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/tags/%E5%8A%9B%E6%89%A3/"/>
    
    <category term="字符串" scheme="http://120.48.161.105:4000/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>奇偶排序（左边为奇数右边为偶数）</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E5%B7%A6%E8%BE%B9%E4%B8%BA%E5%A5%87%E6%95%B0%E5%8F%B3%E8%BE%B9%E4%B8%BA%E5%81%B6%E6%95%B0%EF%BC%89/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E5%B7%A6%E8%BE%B9%E4%B8%BA%E5%A5%87%E6%95%B0%E5%8F%B3%E8%BE%B9%E4%B8%BA%E5%81%B6%E6%95%B0%EF%BC%89/</id>
    <published>2022-09-12T07:58:46.877Z</published>
    <updated>2022-09-12T07:59:34.560Z</updated>
    
    
    <summary type="html">给定一个存放整数的数组，重新排列数组使得数组左边为奇数，右边为偶数;并且都要分别有序。</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/categories/%E5%8A%9B%E6%89%A3/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数组" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="简单" scheme="http://120.48.161.105:4000/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="offer" scheme="http://120.48.161.105:4000/tags/offer/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>offer整数除法</title>
    <link href="http://120.48.161.105:4000/2022/09/12/offer%E6%95%B4%E6%95%B0%E9%99%A4%E6%B3%95/"/>
    <id>http://120.48.161.105:4000/2022/09/12/offer%E6%95%B4%E6%95%B0%E9%99%A4%E6%B3%95/</id>
    <published>2022-09-12T07:56:49.372Z</published>
    <updated>2022-09-12T07:58:22.570Z</updated>
    
    
    <summary type="html">给定两个整数 a 和 b ，求它们的除法的商 a/b ，要求不得使用乘号 &#39;*&#39;、除号 &#39;/&#39; 以及求余符号 &#39;%&#39; 。</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/categories/%E5%8A%9B%E6%89%A3/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="简单" scheme="http://120.48.161.105:4000/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="offer" scheme="http://120.48.161.105:4000/tags/offer/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>H5声明和H5基本骨架，各种标签以及H5的新标签</title>
    <link href="http://120.48.161.105:4000/2022/09/12/HTML5%E7%AE%80%E4%BB%8B%E5%92%8CH5%E6%96%B0%E6%A0%87%E7%AD%BE/"/>
    <id>http://120.48.161.105:4000/2022/09/12/HTML5%E7%AE%80%E4%BB%8B%E5%92%8CH5%E6%96%B0%E6%A0%87%E7%AD%BE/</id>
    <published>2022-09-12T07:54:29.076Z</published>
    <updated>2022-09-12T08:15:39.531Z</updated>
    
    
    <summary type="html">H5的标签，骨架介绍</summary>
    
    
    
    <category term="HTML" scheme="http://120.48.161.105:4000/categories/HTML/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="http://120.48.161.105:4000/tags/HTML/"/>
    
    <category term="标签" scheme="http://120.48.161.105:4000/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>二叉树的识别与应用</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%AF%86%E5%88%AB%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%AF%86%E5%88%AB%E4%B8%8E%E5%BA%94%E7%94%A8/</id>
    <published>2022-09-12T07:49:09.548Z</published>
    <updated>2022-09-12T07:52:59.100Z</updated>
    
    
    <summary type="html">二叉树的先序、中序、后序遍历方式，宽度优先遍历、最大宽度查找，搜索二叉树的判断</summary>
    
    
    
    <category term="数据结构和算法" scheme="http://120.48.161.105:4000/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    <category term="二叉树" scheme="http://120.48.161.105:4000/categories/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
    
    <category term="数据结构" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="二叉树" scheme="http://120.48.161.105:4000/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
    <category term="二叉树遍历" scheme="http://120.48.161.105:4000/tags/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/"/>
    
    <category term="搜索二叉树" scheme="http://120.48.161.105:4000/tags/%E6%90%9C%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>桶排序及其应用</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E6%A1%B6%E6%8E%92%E5%8F%8A%E7%A8%B3%E5%AE%9A%E6%80%A7%E6%B1%87%E6%80%BB/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E6%A1%B6%E6%8E%92%E5%8F%8A%E7%A8%B3%E5%AE%9A%E6%80%A7%E6%B1%87%E6%80%BB/</id>
    <published>2022-09-12T07:47:53.663Z</published>
    <updated>2022-09-12T07:48:40.508Z</updated>
    
    
    <summary type="html">桶排序的思路以及code，还有相关的问题解决，</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构和算法" scheme="http://120.48.161.105:4000/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="排序算法" scheme="http://120.48.161.105:4000/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="桶排序" scheme="http://120.48.161.105:4000/tags/%E6%A1%B6%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>堆结构、堆排序及其应用</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E5%A0%86%E5%8F%8A%E5%A0%86%E6%8E%92%E5%BA%8F%E5%BA%94%E7%94%A8/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E5%A0%86%E5%8F%8A%E5%A0%86%E6%8E%92%E5%BA%8F%E5%BA%94%E7%94%A8/</id>
    <published>2022-09-12T07:45:08.828Z</published>
    <updated>2022-09-12T07:47:13.836Z</updated>
    
    
    <summary type="html">堆结构、堆排序的思路以及code，还有相关的问题解决，</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构和算法" scheme="http://120.48.161.105:4000/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="排序算法" scheme="http://120.48.161.105:4000/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="堆结构" scheme="http://120.48.161.105:4000/tags/%E5%A0%86%E7%BB%93%E6%9E%84/"/>
    
    <category term="堆排序" scheme="http://120.48.161.105:4000/tags/%E5%A0%86%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>归并排序，快排变形应用</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%BF%AB%E6%8E%92%E5%8F%98%E5%BD%A2%E5%BA%94%E7%94%A8/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%BF%AB%E6%8E%92%E5%8F%98%E5%BD%A2%E5%BA%94%E7%94%A8/</id>
    <published>2022-09-12T07:42:08.191Z</published>
    <updated>2022-09-12T07:44:41.852Z</updated>
    
    
    <summary type="html">归并排序，快排的思路以及code，还有相关的问题解决，</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构和算法" scheme="http://120.48.161.105:4000/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="排序算法" scheme="http://120.48.161.105:4000/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="归并排序" scheme="http://120.48.161.105:4000/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    
    <category term="快排排序" scheme="http://120.48.161.105:4000/tags/%E5%BF%AB%E6%8E%92%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>复杂度和简单排序算法及位运算的实际问题</title>
    <link href="http://120.48.161.105:4000/2022/09/12/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%AE%80%E5%8D%95%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8F%8A%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E5%AE%9E%E9%99%85%E9%97%AE%E9%A2%98/"/>
    <id>http://120.48.161.105:4000/2022/09/12/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%AE%80%E5%8D%95%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8F%8A%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E5%AE%9E%E9%99%85%E9%97%AE%E9%A2%98/</id>
    <published>2022-09-12T07:35:50.449Z</published>
    <updated>2022-09-12T07:41:28.138Z</updated>
    
    
    <summary type="html">数据结构和算法是每个程序员必不可少的一部分，算法培养思维逻辑，而数据结构提供实现思维的载体，本文讲述了复杂度以及一些简单排序和实际算法问题的描述。</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构和算法" scheme="http://120.48.161.105:4000/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="排序算法" scheme="http://120.48.161.105:4000/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="复杂度" scheme="http://120.48.161.105:4000/tags/%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
    
    <category term="选择排序" scheme="http://120.48.161.105:4000/tags/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/>
    
    <category term="冒泡排序" scheme="http://120.48.161.105:4000/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
    <category term="插入排序" scheme="http://120.48.161.105:4000/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>两数之和II-输入有序数组</title>
    <link href="http://120.48.161.105:4000/2022/09/10/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
    <id>http://120.48.161.105:4000/2022/09/10/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</id>
    <published>2022-09-10T06:41:00.074Z</published>
    <updated>2022-09-10T06:41:00.074Z</updated>
    
    
    <summary type="html">给你一个下标从 1 开始的整数数组 numbers ，该数组已按 非递减顺序排列  ，请你从数组中找出满足相加之和等于目标数 target 的两个数。如果设这两个数分别是 numbers[index1] 和 numbers[index2] ，则 1 &lt;= index1 &lt; index2 &lt;= numbers.length 。 以长度为 2 的整数数组 [index1, index2] 的形式返回这两个整数的下标 index1 和 index2。</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/categories/%E5%8A%9B%E6%89%A3/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数组" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="简单" scheme="http://120.48.161.105:4000/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="offer" scheme="http://120.48.161.105:4000/tags/offer/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>一些JS的插件库</title>
    <link href="http://120.48.161.105:4000/2022/09/10/js%E6%8F%92%E4%BB%B6%E5%BA%93/"/>
    <id>http://120.48.161.105:4000/2022/09/10/js%E6%8F%92%E4%BB%B6%E5%BA%93/</id>
    <published>2022-09-10T06:41:00.073Z</published>
    <updated>2022-09-12T08:21:33.050Z</updated>
    
    
    <summary type="html">Vue生命周期的运行与各个阶段的效果，应该在正确的阶段执行正确的操作</summary>
    
    
    
    <category term="JS" scheme="http://120.48.161.105:4000/categories/JS/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://120.48.161.105:4000/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="http://120.48.161.105:4000/tags/JS/"/>
    
    <category term="插件" scheme="http://120.48.161.105:4000/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Vue的生命周期，各个组件间的执行情况</title>
    <link href="http://120.48.161.105:4000/2022/09/10/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8A%E5%90%84%E7%BB%84%E4%BB%B6%E9%97%B4%E7%9A%84%E6%89%A7%E8%A1%8C%E6%83%85%E5%86%B5/"/>
    <id>http://120.48.161.105:4000/2022/09/10/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8A%E5%90%84%E7%BB%84%E4%BB%B6%E9%97%B4%E7%9A%84%E6%89%A7%E8%A1%8C%E6%83%85%E5%86%B5/</id>
    <published>2022-09-10T06:41:00.071Z</published>
    <updated>2022-09-12T08:15:39.542Z</updated>
    
    
    <summary type="html">Vue生命周期的运行与各个阶段的效果，应该在正确的阶段执行正确的操作</summary>
    
    
    
    <category term="Vue" scheme="http://120.48.161.105:4000/categories/Vue/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue" scheme="http://120.48.161.105:4000/tags/Vue/"/>
    
    <category term="生命周期" scheme="http://120.48.161.105:4000/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
    <category term="组件" scheme="http://120.48.161.105:4000/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
</feed>
