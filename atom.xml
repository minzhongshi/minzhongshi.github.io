<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Min&#39;s Blog</title>
  
  <subtitle>well begun is half done</subtitle>
  <link href="http://120.48.161.105:4000/atom.xml" rel="self"/>
  
  <link href="http://120.48.161.105:4000/"/>
  <updated>2022-09-10T06:41:00.074Z</updated>
  <id>http://120.48.161.105:4000/</id>
  
  <author>
    <name>史明忠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>两数之和II-输入有序数组</title>
    <link href="http://120.48.161.105:4000/2022/09/10/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
    <id>http://120.48.161.105:4000/2022/09/10/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</id>
    <published>2022-09-10T06:41:00.074Z</published>
    <updated>2022-09-10T06:41:00.074Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="问题描述："   >          <a href="#问题描述：" class="heading-link"><i class="fas fa-link"></i></a><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1>      <p>给你一个下标从 1 开始的整数数组 numbers ，该数组已按 非递减顺序排列  ，请你从数组中找出满足相加之和等于目标数 target 的两个数。如果设这两个数分别是 numbers[index1] 和 numbers[index2] ，则 1 &lt;&#x3D; index1 &lt; index2 &lt;&#x3D; numbers.length 。</p><p>以长度为 2 的整数数组 [index1, index2] 的形式返回这两个整数的下标 index1 和 index2。</p><p>你可以假设每个输入 只对应唯一的答案 ，而且你 不可以 重复使用相同的元素。</p><p>你所设计的解决方案必须只使用常量级的额外空间。</p><hr>        <h1 id="例子"   >          <a href="#例子" class="heading-link"><i class="fas fa-link"></i></a><a href="#例子" class="headerlink" title="例子"></a>例子</h1>      <p>示例 1：</p><p>输入：numbers &#x3D; [2,7,11,15], target &#x3D; 9<br>输出：[1,2]<br>解释：2 与 7 之和等于目标数 9 。因此 index1 &#x3D; 1, index2 &#x3D; 2 。返回 [1, 2] 。<br>示例 2：</p><p>输入：numbers &#x3D; [2,3,4], target &#x3D; 6<br>输出：[1,3]<br>解释：2 与 4 之和等于目标数 6 。因此 index1 &#x3D; 1, index2 &#x3D; 3 。返回 [1, 3] 。<br>示例 3：</p><p>输入：numbers &#x3D; [-1,0], target &#x3D; -1<br>输出：[1,2]<br>解释：-1 与 0 之和等于目标数 -1 。因此 index1 &#x3D; 1, index2 &#x3D; 2 。返回 [1, 2] 。</p><hr>        <h1 id="提示："   >          <a href="#提示：" class="heading-link"><i class="fas fa-link"></i></a><a href="#提示：" class="headerlink" title="提示："></a>提示：</h1>      <ul><li>2 &lt;&#x3D; numbers.length &lt;&#x3D; 3 * 104</li><li>-1000 &lt;&#x3D; numbers[i] &lt;&#x3D; 1000</li><li>numbers 按 非递减顺序 排列</li><li>-1000 &lt;&#x3D; target &lt;&#x3D; 1000</li><li>仅存在一个有效答案</li></ul><hr>        <h1 id="代码实现："   >          <a href="#代码实现：" class="heading-link"><i class="fas fa-link"></i></a><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h1>              <h2 id="1-双指针："   >          <a href="#1-双指针：" class="heading-link"><i class="fas fa-link"></i></a><a href="#1-双指针：" class="headerlink" title="1.双指针："></a>1.双指针：</h2>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] numbers, <span class="type">int</span> target) &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> rigth=numbers.length-<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">while</span>(left&lt;rigth)&#123;</span><br><span class="line">           <span class="keyword">if</span>(numbers[left]+numbers[rigth]==target)&#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span> []&#123;left+<span class="number">1</span>,rigth+<span class="number">1</span>&#125;;</span><br><span class="line">           &#125;<span class="keyword">else</span> <span class="keyword">if</span>(numbers[left]+numbers[rigth]&lt;target)&#123;</span><br><span class="line">               left++;</span><br><span class="line">           &#125;<span class="keyword">else</span> rigth--;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="2-二分："   >          <a href="#2-二分：" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-二分：" class="headerlink" title="2.二分："></a>2.二分：</h2>      <p><code>使用二分时我发现会超时，但是暴力求解不会</code></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] numbers, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;numbers.length-<span class="number">1</span>;i++)&#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span>i+<span class="number">1</span>;</span><br><span class="line">          <span class="type">int</span> rigth=numbers.length-<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">while</span>(left&lt;=rigth)&#123;</span><br><span class="line">               <span class="type">int</span> mid=left+((rigth-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">           <span class="keyword">if</span>(numbers[mid]==target-numbers[i])<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;i+<span class="number">1</span>,mid+<span class="number">1</span>&#125;;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span> (numbers[mid] &gt; target - numbers[i])&#123;</span><br><span class="line">              rigth=mid-<span class="number">1</span>; </span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> rigth=mid+<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;-<span class="number">1</span>,-<span class="number">1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h2 id="3-暴力求解"   >          <a href="#3-暴力求解" class="heading-link"><i class="fas fa-link"></i></a><a href="#3-暴力求解" class="headerlink" title="3.暴力求解"></a>3.暴力求解</h2>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] numbers, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> temp2[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;numbers.length;i++)&#123;</span><br><span class="line">            <span class="type">int</span> temp=target-numbers[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;numbers.length;j++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(numbers[j]==temp)&#123;</span><br><span class="line">                   temp2[<span class="number">0</span>]=i+<span class="number">1</span>;</span><br><span class="line">                   temp2[<span class="number">1</span>]=j+<span class="number">1</span>;</span><br><span class="line">                   <span class="keyword">return</span> temp2;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><hr><p>题目来源：力扣（LeetCode）<br>链接: <span class="exturl"><a class="exturl__link"   href="https://leetcode.cn/problems/two-sum-ii-input-array-is-sorted" >LeetCode题目</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">给你一个下标从 1 开始的整数数组 numbers ，该数组已按 非递减顺序排列  ，请你从数组中找出满足相加之和等于目标数 target 的两个数。如果设这两个数分别是 numbers[index1] 和 numbers[index2] ，则 1 &lt;= index1 &lt; index2 &lt;= numbers.length 。 以长度为 2 的整数数组 [index1, index2] 的形式返回这两个整数的下标 index1 和 index2。</summary>
    
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/categories/%E5%8A%9B%E6%89%A3/"/>
    
    
    <category term="算法" scheme="http://120.48.161.105:4000/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数组" scheme="http://120.48.161.105:4000/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="简单" scheme="http://120.48.161.105:4000/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="offer" scheme="http://120.48.161.105:4000/tags/offer/"/>
    
    <category term="力扣" scheme="http://120.48.161.105:4000/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>一些JS的插件库</title>
    <link href="http://120.48.161.105:4000/2022/09/10/js%E6%8F%92%E4%BB%B6%E5%BA%93/"/>
    <id>http://120.48.161.105:4000/2022/09/10/js%E6%8F%92%E4%BB%B6%E5%BA%93/</id>
    <published>2022-09-10T06:41:00.073Z</published>
    <updated>2022-09-12T05:40:32.225Z</updated>
    
    <content type="html"><![CDATA[<p>1、<span class="exturl"><a class="exturl__link"   href="https://github.com/airbnb" >airbnb</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<span class="exturl"><a class="exturl__link"   href="https://github.com/airbnb/lottie-web" >lottie-web</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>*</p><p>一个可以从Adobe After Effects中创建的动画直接导出到你的网站。</p><p>适用于Lottie for Web，<span class="exturl"><a class="exturl__link"   href="https://github.com/airbnb/lottie-android" >Android</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，<span class="exturl"><a class="exturl__link"   href="https://github.com/airbnb/lottie-ios" >iOS</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，<span class="exturl"><a class="exturl__link"   href="https://github.com/airbnb/lottie-react-native" >React Native</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>和<span class="exturl"><a class="exturl__link"   href="https://aka.ms/lottie" >Windows。</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>例子：</p><p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://github.com/airbnb/lottie-web/blob/master/gifs/Example4.gif?raw=true"  style=""  alt="Example4.gif">      </p><p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://github.com/airbnb/lottie-web/blob/master/gifs/Example2.gif?raw=true"  style=""  alt="Example2.gif">      </p><p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://github.com/airbnb/lottie-web/blob/master/gifs/Community%202_3.gif?raw=true"  style=""  alt="Community 2_3.gif">      </p><p>2、<span class="exturl"><a class="exturl__link"   href="https://github.com/wagerfield" >wagerfield</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<strong><span class="exturl"><a class="exturl__link"   href="https://github.com/wagerfield/parallax" >parallax</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p>一个轻量级视差渲染JS库，可以创建视察效果，用鼠标来控制，还可以调整物体移动速度。</p><p>示例网站：<span class="exturl"><a class="exturl__link"   href="http://matthew.wagerfield.com/parallax/" >parallax.js (wagerfield.com)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>3、<span class="exturl"><a class="exturl__link"   href="https://github.com/e-oj" >e-oj</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<strong><span class="exturl"><a class="exturl__link"   href="https://github.com/e-oj/Magic-Grid" >Magic-Grid</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p>一个简单、轻量级的 Javascript 库，用于动态网格布局</p><p>效果：</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="http://imgconvert.csdnimg.cn/aHR0cHM6Ly92dWVqc2V4YW1wbGVzLmNvbS9jb250ZW50L2ltYWdlcy8yMDE5LzAxL01hZ2ljLUdyaWR2LmdpZg"  alt="Magic-Gridv">      </p><p>4、<span class="exturl"><a class="exturl__link"   href="https://github.com/webslides" >webslides</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<strong><span class="exturl"><a class="exturl__link"   href="https://github.com/webslides/WebSlides" >WebSlides</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p>以漂亮的方式制作HTML演示文稿</p><p>演示网站：<span class="exturl"><a class="exturl__link"   href="https://webslides.tv/demos" >https://webslides.tv/demos</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p><p>5、<span class="exturl"><a class="exturl__link"   href="https://github.com/svgdotjs" >svgdotjs</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<strong><span class="exturl"><a class="exturl__link"   href="https://github.com/svgdotjs/svg.js" >svg.js</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p>用于操作 SVG 和制作动画的轻量级库，无需任何依赖项。</p><p>6、<span class="exturl"><a class="exturl__link"   href="https://github.com/dixonandmoe" >dixonandmoe</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<strong><span class="exturl"><a class="exturl__link"   href="https://github.com/dixonandmoe/rellax" >rellax</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p>是一个超轻量级，JavaScript视差库。Rellax 现在可以在移动设备上工作 </p><p>效果网站：<span class="exturl"><a class="exturl__link"   href="https://dixonandmoe.com/rellax/" >Demo Website</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>7、<span class="exturl"><a class="exturl__link"   href="http://dynamicsjs.com/" >Dynamics.js (dynamicsjs.com)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>用于创建基于物理的动画</p><p>8、<span class="exturl"><a class="exturl__link"   href="https://github.com/mojs" >mojs</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<strong><span class="exturl"><a class="exturl__link"   href="https://github.com/mojs/mojs" >mojs</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p>用于 Web 的运动图形工具</p><p>演示网址：<span class="exturl"><a class="exturl__link"   href="https://mojs.github.io/" >mo.js</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>9、<span class="exturl"><a class="exturl__link"   href="https://github.com/metafizzy" >metafizzy</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&#x2F;<strong><span class="exturl"><a class="exturl__link"   href="https://github.com/metafizzy/zdog" >zdog</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p>圆形，平面，设计师友好的伪3D引擎，用于canvas和SVG</p><p>官网：<span class="exturl"><a class="exturl__link"   href="https://zzz.dog/" >Zdog · Round, flat, designer-friendly pseudo-3D engine for canvas and SVG (zzz.dog)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>10、<span class="exturl"><a class="exturl__link"   href="https://www.npmjs.com/package/leader-line-vue" >leader-line-vue</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>用来画引导线:</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://raw.githubusercontent.com/anseki/leader-line/HEAD/img/ex-020.gif"  alt="前020">      </p>]]></content>
    
    
    <summary type="html">Vue生命周期的运行与各个阶段的效果，应该在正确的阶段执行正确的操作</summary>
    
    
    
    <category term="JS" scheme="http://120.48.161.105:4000/categories/JS/"/>
    
    <category term="前端" scheme="http://120.48.161.105:4000/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://120.48.161.105:4000/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="http://120.48.161.105:4000/tags/JS/"/>
    
    <category term="插件" scheme="http://120.48.161.105:4000/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Vue的生命周期，各个组件间的执行情况</title>
    <link href="http://120.48.161.105:4000/2022/09/10/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8A%E5%90%84%E7%BB%84%E4%BB%B6%E9%97%B4%E7%9A%84%E6%89%A7%E8%A1%8C%E6%83%85%E5%86%B5/"/>
    <id>http://120.48.161.105:4000/2022/09/10/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%8A%E5%90%84%E7%BB%84%E4%BB%B6%E9%97%B4%E7%9A%84%E6%89%A7%E8%A1%8C%E6%83%85%E5%86%B5/</id>
    <published>2022-09-10T06:41:00.071Z</published>
    <updated>2022-09-10T06:41:00.071Z</updated>
    
    <content type="html"><![CDATA[<hr>        <h1 id="前言"   >          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a><a href="#前言" class="headerlink" title="前言"></a>前言</h1>      <p>Vue的生命周期，各个组件间的执行情况。<br><code>注：本文是以Vue2.x版本展开叙述</code></p><hr>        <h1 id="一、Vue的生命周期是什么？"   >          <a href="#一、Vue的生命周期是什么？" class="heading-link"><i class="fas fa-link"></i></a><a href="#一、Vue的生命周期是什么？" class="headerlink" title="一、Vue的生命周期是什么？"></a>一、Vue的生命周期是什么？</h1>      <p>Vue的组件都是独立存在的，每个组件都要经历他自己的<code>生命周期</code>。Vue的生命周期是指组件：<br><strong>创建</strong>—&gt;<strong>数据初始化</strong>—&gt;<strong>挂载</strong>—&gt;<strong>更新</strong>—&gt;<strong>销毁</strong><br>简单的来说就是组件从创建到销毁之间的过程</p>        <h1 id="二、Vue生命周期中具体过程"   >          <a href="#二、Vue生命周期中具体过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#二、Vue生命周期中具体过程" class="headerlink" title="二、Vue生命周期中具体过程"></a>二、Vue生命周期中具体过程</h1>              <h2 id="1-Vue生命周期中的函数"   >          <a href="#1-Vue生命周期中的函数" class="heading-link"><i class="fas fa-link"></i></a><a href="#1-Vue生命周期中的函数" class="headerlink" title="1.Vue生命周期中的函数"></a>1.Vue生命周期中的函数</h2>      <p><strong>生命周期钩子</strong>也叫<strong>生命周期函数</strong>也叫<strong>生命周期事件</strong>，vue中他自己携带了八个生命周期函数，如下：</p>        <h3 id="创建Vue实例期阶段："   >          <a href="#创建Vue实例期阶段：" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建Vue实例期阶段：" class="headerlink" title="创建Vue实例期阶段："></a>创建Vue实例期阶段：</h3>      <ul><li><p><strong>beforeCreate：</strong><br> 实例刚在内存中被创建出来，此时，还没有初始化完成data和methods属性。</p></li><li><p><strong>created：</strong><br>实例已经在内存中创建完成，此时data和menthods以及创建完成，但没有开始编译模板。</p></li><li><p><strong>beforeMount：</strong><br>此时完成了模板的编译，但没有进行挂载。</p></li><li><p><strong>mounted：</strong><br>此时已经完成挂载到指定容器中显示了。</p></li></ul>        <h3 id="运行阶段："   >          <a href="#运行阶段：" class="heading-link"><i class="fas fa-link"></i></a><a href="#运行阶段：" class="headerlink" title="运行阶段："></a>运行阶段：</h3>      <ul><li><strong>beforeUpdate：</strong><br>状态更新之前调用此函数，此时data中的状态值是最新的，但在界面上并没有得到更新，还没有开始重新渲染DOM节点。</li><li><strong>updated：</strong><br>实例更新完成后调用此函数，此时以及重新渲染好DOM节点，界面显示数据也是最新的。</li></ul>        <h3 id="销毁阶段："   >          <a href="#销毁阶段：" class="heading-link"><i class="fas fa-link"></i></a><a href="#销毁阶段：" class="headerlink" title="销毁阶段："></a>销毁阶段：</h3>      <ul><li><strong>beforeDestroy：</strong><br>实例 销毁前调用的函数，此时，实力还是完全可用的。</li><li><strong>destroyed：</strong><br>实例销毁后调用，实例锁指示的所有东西都将解绑，所有监听器将移除，所有子实例也将销毁。<blockquote><p>生命周期流程图：<br>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/27c2330b888345dba3fec82144bb8306.png#pic_center"  alt="在这里插入图片描述">      </p></blockquote></li></ul><blockquote><p>代码演示：</p></blockquote><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">       el: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">       data: &#123;</span><br><span class="line">           message: <span class="string">&quot;Hello Vue!&quot;</span></span><br><span class="line">       &#125;,</span><br><span class="line">       methods: &#123;</span><br><span class="line">           changeMessage() &#123;</span><br><span class="line">               this.message=<span class="string">&#x27;改变了！&#x27;</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;,</span><br><span class="line">       beforeCreate() &#123;</span><br><span class="line">           console.<span class="built_in">log</span>(<span class="string">&quot;---------- 初始化前 beforeCreate-----------&quot;</span>);</span><br><span class="line">           this.message===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;message没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.message);</span><br><span class="line">           this.$el===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;el没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.$el);</span><br><span class="line">           </span><br><span class="line">       &#125;,</span><br><span class="line">       created() &#123;</span><br><span class="line">           console.<span class="built_in">log</span>(<span class="string">&quot;---------- 初始化完成 created----------&quot;</span>);</span><br><span class="line">           this.message===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;message没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.message);</span><br><span class="line">           this.$el===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;el没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.$el);</span><br><span class="line">       &#125;,</span><br><span class="line">       beforeMount() &#123;</span><br><span class="line">           console.<span class="built_in">log</span>(<span class="string">&quot;---------- 挂载前 beforeMount----------&quot;</span>);</span><br><span class="line">           this.message===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;message没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.message);</span><br><span class="line">           this.$el===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;el没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.$el);</span><br><span class="line">       &#125;,</span><br><span class="line">       mounted() &#123;</span><br><span class="line">           console.<span class="built_in">log</span>(<span class="string">&quot;---------- 挂载完成 mounted----------&quot;</span>);</span><br><span class="line">           this.message===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;message没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.message);</span><br><span class="line">           this.$el===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;el没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.$el);</span><br><span class="line">       &#125;,</span><br><span class="line">       beforeUpdate() &#123;</span><br><span class="line">           console.<span class="built_in">log</span>(<span class="string">&quot;---------- 更新前 beforeUpdate----------&quot;</span>);</span><br><span class="line">           this.message===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;message没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.message);</span><br><span class="line">           this.$el===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;el没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.$el);</span><br><span class="line">       &#125;,</span><br><span class="line">       updated() &#123;</span><br><span class="line">           console.<span class="built_in">log</span>(<span class="string">&quot;---------- 更新完成 updated----------&quot;</span>);</span><br><span class="line">           this.message===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;message没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.message);</span><br><span class="line">           this.$el===undefined?console.<span class="built_in">log</span>(<span class="string">&#x27;el没拿到&#x27;</span>):console.<span class="built_in">log</span>(this.$el);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></div></figure><blockquote><p>创建阶段运行结果：</p></blockquote><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/d3c052cebaad48329c13c55b72f25f23.png" >      <br><strong>可以看到首次加载只会运行前四个周期函数，在挂载前才能拿到el属性，如果要操作DOM节点最早在挂在完成 mounted中操作。</strong></p><blockquote><p>运行阶段运行结果：</p></blockquote><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/6b1907c6374949568f14cccd17df1bbe.png"  alt="在这里插入图片描述">      </p>        <h2 id="2-加入keep-alive后"   >          <a href="#2-加入keep-alive后" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-加入keep-alive后" class="headerlink" title="2.加入keep-alive后"></a>2.加入keep-alive后</h2>              <h3 id="1）keep-alive的认识："   >          <a href="#1）keep-alive的认识：" class="heading-link"><i class="fas fa-link"></i></a><a href="#1）keep-alive的认识：" class="headerlink" title="1）keep-alive的认识："></a>1）keep-alive的认识：</h3>      <p>是vue自带的内部组件，是用<strong>来缓存组件</strong>的，达到<strong>提升性能</strong>的目的。<br>当使用keep-alive后会增加两个生命周期函数：</p><ul><li><p>activated<br>在 <strong>keep-alive 组件激活</strong>时调用， 该钩子函数在<strong>服务器端渲染期间</strong>不被调用。<br>承担原来<strong>created</strong>钩子中获取数据的任务<br>在第一次进入keep-alive包裹的组件时，会调用 beforeCreate、created、beforeMount、mounted、activated；这五个生命周期函数。<br>当第二次或第n次进入时只会调用activated</p></li><li><p>deactivated<br>在 keep-alive 组件停用时调用，该钩子在服务器端渲染期间不被调用。</p></li></ul>        <h3 id="2）keep-alive的用法："   >          <a href="#2）keep-alive的用法：" class="heading-link"><i class="fas fa-link"></i></a><a href="#2）keep-alive的用法：" class="headerlink" title="2）keep-alive的用法："></a>2）keep-alive的用法：</h3>      <p>Props有三个include、exclude、max。</p><ul><li>include<br>  使用字符串或者正则表达式，匹配的组件才会被缓存</li><li>exclude<br>  使用字符串或者正则表达式，匹配的组件都不会被缓存</li><li>max<br>  以数字的形式记录可以缓存多少个组件实例，到达这个值后再次缓存时将销毁最久未使用的组件实例。</li></ul>        <h1 id="各组件间的执行情况"   >          <a href="#各组件间的执行情况" class="heading-link"><i class="fas fa-link"></i></a><a href="#各组件间的执行情况" class="headerlink" title="各组件间的执行情况"></a>各组件间的执行情况</h1>              <h2 id="1-加载渲染过程"   >          <a href="#1-加载渲染过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#1-加载渲染过程" class="headerlink" title="1.加载渲染过程"></a>1.加载渲染过程</h2>      <blockquote><p>过程：<br><strong>父组件beforeCreate</strong> –&gt; <strong>父组件created</strong> –&gt; <strong>父组件beforeMount</strong> –&gt; <strong>子组件beforeCreate</strong> –&gt; <strong>子组件created</strong> –&gt; <strong>子组件beforeMount</strong> –&gt; <strong>子组件mounted</strong> –&gt; <strong>父组件mounted</strong></p></blockquote>        <h2 id="2-子组件更新过程"   >          <a href="#2-子组件更新过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-子组件更新过程" class="headerlink" title="2.子组件更新过程"></a>2.子组件更新过程</h2>      <blockquote><p>过程：<br><strong>子组件beforeUpdate</strong>  –&gt;  <strong>子组件updated</strong>  </p></blockquote>        <h2 id="3-父组件更新过程"   >          <a href="#3-父组件更新过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#3-父组件更新过程" class="headerlink" title="3.父组件更新过程"></a>3.父组件更新过程</h2>      <blockquote><p><strong>父组件beforeUpdate</strong>  –&gt;  <strong>父组件updated</strong></p></blockquote>        <h2 id="4-组件销毁过程"   >          <a href="#4-组件销毁过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-组件销毁过程" class="headerlink" title="4.组件销毁过程"></a>4.组件销毁过程</h2>      <blockquote><p><strong>父组件beforeDestroy</strong> –&gt; <strong>子组件beforeDestroy</strong> –&gt; <strong>子组件destroyed</strong> –&gt; <strong>父组件destroyed</strong></p></blockquote>        <h2 id="5-过程演示"   >          <a href="#5-过程演示" class="heading-link"><i class="fas fa-link"></i></a><a href="#5-过程演示" class="headerlink" title="5.过程演示"></a>5.过程演示</h2>      <blockquote><p>父组件代码</p></blockquote><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 2px #1E1E1E; height: 500px;width: 500px;background-color: blueviolet; text-align: center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changef&quot;</span> &gt;</span>父组件改变<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Son</span>&gt;</span><span class="tag">&lt;/<span class="name">Son</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;destroy&quot;</span>&gt;</span>点击销毁<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">Son</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Son.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">Son</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">message</span>: <span class="string">&quot;父组件&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">changef</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">message</span>=<span class="string">&#x27;父组件改变了&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">destroy</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$destroy();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;销毁完成&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 父组件初始化前 beforeCreate-----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 父组件初始化完成 created----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeMount</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 父组件挂载前 beforeMount----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 父组件挂载完成 mounted----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeUpdate</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 父组件更新前 beforeUpdate----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">updated</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 父组件更新完成 updated----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeDestroy</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---------- 父组件销毁前 beforeDestroy----------&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">destroyed</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---------- 父组件销毁后 destroyed----------&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></div></figure><blockquote><p>子组件代码</p></blockquote><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 2px #1E1E1E; height: 200px;width:200px;background-color: aqua;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changes&quot;</span>&gt;</span>子组件改变<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// eslint-disable-next-line vue/multi-word-component-names</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;Son&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">message</span>: <span class="string">&quot;子组件&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">changes</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">message</span>=<span class="string">&#x27;子组件改变了&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 子组件初始化前 beforeCreate-----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 子组件初始化完成 created----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeMount</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 子组件挂载前 beforeMount----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 子组件挂载完成 mounted----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeUpdate</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 子组件更新前 beforeUpdate----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">updated</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---------- 子组件更新完成 updated----------&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeDestroy</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---------- 子组件销毁前 beforeDestroy----------&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">destroyed</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---------- 子组件销毁后 destroyed----------&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></div></figure><blockquote><p>加载渲染：<br>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/1e0fc120774141659a13fc399163e525.png"  alt="在这里插入图片描述">      </p></blockquote><blockquote><p>更新阶段：<br>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/1dbd838712ba4a6cbbb50f8b26c45ef9.png"  alt="在这里插入图片描述">      </p></blockquote><blockquote><p>销毁阶段：<br>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/11c316d9bff44e798c70517f11209b53.png"  alt="在这里插入图片描述">      </p></blockquote>        <h1 id="总结"   >          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a><a href="#总结" class="headerlink" title="总结"></a>总结</h1>      <ul><li>生命周期：<ul><li>又名：生命周期回调函数、生命周期函数、生命周期钩子。</li><li>是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数。</li><li>生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的。</li><li>生命周期函数中的this指向是vm 或 组件实例对象。</li></ul></li></ul><hr><ul><li>常用的生命周期钩子：<ul><li>mounted: 发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。</li><li>beforeDestroy: 清除定时器、解绑自定义事件、取消订阅消息等【收尾工作】。</li></ul></li></ul><hr><ul><li>关于销毁Vue实例：<ul><li>销毁后借助Vue开发者工具看不到任何信息。</li><li>销毁后自定义事件会失效，但原生DOM事件依然有效。</li><li>一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程了。</li></ul></li></ul>]]></content>
    
    
    <summary type="html">Vue生命周期的运行与各个阶段的效果，应该在正确的阶段执行正确的操作</summary>
    
    
    
    <category term="Vue" scheme="http://120.48.161.105:4000/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://120.48.161.105:4000/tags/Vue/"/>
    
    <category term="生命周期" scheme="http://120.48.161.105:4000/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
    <category term="组件" scheme="http://120.48.161.105:4000/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
</feed>
